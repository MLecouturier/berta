{"version":3,"sources":["ActionTypes.js","StateActions.js","SiteActions.js","middleware.js","reducer.js","index.js"],"names":["window","document","ActionTypes","GET_STATE","SET_STATE","CREATE_SITE","SITE_CREATED","UPDATE_SITE","SITE_UPDATED","DELETE_SITE","ORDER_SITES","Actions","Object","assign","getState","type","meta","remote","url","dispatch","setState","state","API_ROOT","createSite","data","onComplete","method","siteCreated","site","callback","updateSite","path","value","siteUpdated","resp","deleteSite","orderSites","sites","checkStatus","response","status","error","Error","statusText","redux_middleware","store","next","action","fetch","headers","Accept","Content-Type","body","undefined","JSON","stringify","then","json","console","log","reducer","Immutable","Map","fromJS","getIn","toJSON","push","setIn","split","forEach","new_idx","site_name","find","old_idx","_site","name","length","List","createStoreWithMiddleware","Redux","applyMiddleware","createStore","redux_store"],"mappings":"CAAA,SAAAA,EAAAC,GACA,YAEAD,GAAAE,aACAC,UAAA,YACAC,UAAA,YACAC,YAAA,cACAC,aAAA,eACAC,YAAA,cACAC,aAAA,eACAC,YAAA,cACAC,YAAA,gBAEAV,OAAAC,UCbA,SAAAD,EAAAC,GACA,YAEAD,GAAAW,QAAAX,EAAAW,YAEAC,OAAAC,OAAAb,EAAAW,SACAG,SAAA,WACA,OACAC,KAAAb,YAAAC,UACAa,MACAC,QAAA,EACAC,IAAA,iBACAC,SAAA,cAIAC,SAAA,SAAAC,GACA,OACAN,KAAAb,YAAAE,UACAiB,MAAAA,OAIArB,OAAAC,UCvBA,SAAAD,EAAAC,GACA,YAEAD,GAAAW,QAAAX,EAAAW,WAEA,IAAAW,GAAA,WAEAV,QAAAC,OAAAb,EAAAW,SACAY,WAAA,SAAAC,EAAAC,GACA,OACAV,KAAAb,YAAAG,YACAW,MACAC,QAAA,EACAC,IAAAI,EAAA,cACAI,OAAA,OACAP,SAAA,cAEAM,WAAAA,EACAD,KAAAA,KAIAG,YAAA,SAAAC,EAAAC,GACA,OACAd,KAAAb,YAAAI,aACAsB,KAAAA,IAGAE,WAAA,SAAAC,EAAAC,EAAAP,GACA,OACAV,KAAAb,YAAAK,YACAS,MACAC,QAAA,EACAC,IAAAI,EAAA,cACAI,OAAA,QACAF,MAAAO,KAAAA,EAAAC,MAAAA,GACAb,SAAA,cAEAM,WAAAA,GAEAM,KAAAA,EACAC,MAAAA,IAGAC,YAAA,SAAAC,EAAAL,GACA,OACAd,KAAAb,YAAAM,aACA0B,KAAAA,IAGAC,WAAA,WACA,OACApB,KAAAb,YAAAO,YACAO,MACAC,QAAA,KAMAmB,WAAA,SAAAC,GACA,OACAtB,KAAAb,YAAAQ,YACAM,MACAC,QAAA,EACAS,OAAA,MACAR,IAAAI,EAAA,cACAE,KAAAa,GAEAA,MAAAA,OAIArC,OAAAC,UCzEA,SAAAD,EAAAC,GACA,YAEA,SAAAqC,GAAAC,GACA,GAAAA,EAAAC,QAAA,KAAAD,EAAAC,OAAA,IACA,MAAAD,EAEA,IAAAE,GAAA,GAAAC,OAAAH,EAAAI,WAEA,MADAF,GAAAF,SAAAA,EACAE,EAIAzC,EAAA4C,iBAAA,SAAAC,GACA,MAAA,UAAAC,GACA,MAAA,UAAAC,GACA,GAAAA,EAAA/B,MAAA+B,EAAA/B,KAAAC,OAAA,CACA,GAAAS,GAAAqB,EAAA/B,KAAAU,OAAAqB,EAAA/B,KAAAU,OAAA,KAEAsB,OACAD,EAAA/B,KAAAE,KAEAQ,OAAAA,EACAuB,SACAC,OAAA,mBACAC,eAAA,oBAEAC,KAAA,QAAA1B,EAAA2B,OAAAC,KAAAC,UAAAR,EAAA/B,KAAAQ,QAGAgC,KAAAlB,GACAkB,KAAA,SAAAtB,GACA,MAAAA,GAAAuB,SAEAD,KAAA,SAAAC,GACAV,EAAA/B,KAAAG,WACA0B,EAAA1B,SAAAR,QAAAoC,EAAA/B,KAAAG,UAAAsC,IACAV,EAAA/B,KAAAS,YACAsB,EAAA/B,KAAAS,WAAAgC,MAnBAT,SAuBA,SAAAP,GACAiB,QAAAC,IAAA,iBAAAlB,KAIA,MAAAK,GAAAC,OAIA/C,OAAAC,UCnDA,SAAAD,EAAAC,GACA,YAEAD,GAAA4D,QAAA,SAAAvC,EAAA0B,GACA,GAAAhB,GAAAC,EAAAK,IAQA,QANAqB,QAAAC,IAAAZ,GAEAM,SAAAhC,IACAA,EAAAwC,UAAAC,OAGAf,EAAAhC,MACA,IAAAb,aAAAC,UACA,MAAAkB,EAEA,KAAAnB,aAAAE,UACA,MAAAyD,WAAAE,OAAAhB,EAAA1B,MAEA,KAAAnB,aAAAG,YACA,MAAAgB,EAEA,KAAAnB,aAAAI,aAGA,MAFA+B,GAAAhB,EAAA2C,OAAA,SAAAC,SACA5B,EAAA6B,KAAAnB,EAAAnB,MACAP,EAAA8C,OAAA,OAAA9B,GAEA,KAAAnC,aAAAK,YAIA,MAHAwB,GAAAgB,EAAAhB,KAAAqC,MAAA,KACApC,EAAAe,EAAAf,MAEAX,EAAA8C,MAAApC,EAAAC,EAEA,KAAA9B,aAAAO,YACA,MAAAY,EAEA,KAAAnB,aAAAM,aAIA,MAHAuB,GAAAgB,EAAAb,KAAAH,KAAAqC,MAAA,KACApC,EAAAe,EAAAb,KAAAF,MAEAX,EAAA8C,MAAApC,EAAAC,EAEA,KAAA9B,aAAAQ,YAeA,MAdAqC,GAAAV,MAAAgC,QAAA,SAAAzC,EAAA0C,GACA,GAAAC,GAAA,MAAA3C,EAAA,GAAAA,CAEAA,GAAAP,EAAA2C,OAAA,SAAAQ,KAAA,SAAA5C,EAAA6C,GACA,GAAAC,GAAA9C,EAAAqC,QAEA,OAAAS,GAAAC,OAAAJ,IAGA3C,GACAS,EAAA6B,KAAAtC,EAAAqC,YAIA5B,EAAAuC,OAAA,EACAvD,EAAA8C,OAAA,QAAAN,UAAAgB,KAAAxC,IAEAhB,CAIA,SACA,MAAAA,MAGArB,OAAAC,UCpEA,SAAAD,EAAAC,GACA,YAEA,IAAA6E,GAAAC,MAAAC,gBAAApC,kBAAAmC,MAAAE,YAEAjF,GAAAkF,YAAAJ,EAAAlB,SACAsB,YAAA/D,SAAAR,QAAAG,aACAd,OAAAC","file":"ng-backend.min.js","sourcesContent":["(function(window, document) {\n  'use strict';\n\n  window.ActionTypes = {\n    GET_STATE: 'GET_STATE',\n    SET_STATE: 'SET_STATE',\n    CREATE_SITE: 'CREATE_SITE',\n    SITE_CREATED: 'SITE_CREATED',\n    UPDATE_SITE: 'UPDATE_SITE',\n    SITE_UPDATED: 'SITE_UPDATED',\n    DELETE_SITE: 'DELETE_SITE',\n    ORDER_SITES: 'ORDER_SITES'\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  Object.assign(window.Actions, {\n    getState: function() {\n      return {\n        type: ActionTypes.GET_STATE,\n        meta: {\n          remote: true,\n          url: '/_api/v1/state',\n          dispatch: 'setState'\n        }\n      };\n    },\n    setState: function(state) {\n      return {\n        type: ActionTypes.SET_STATE,\n        state: state\n      };\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.Actions = window.Actions || {};\n\n  var API_ROOT = '/_api/v1/';\n\n  Object.assign(window.Actions, {\n    createSite: function(data, onComplete) {\n      return {\n        type: ActionTypes.CREATE_SITE,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'create-site',\n          method: 'POST',\n          dispatch: 'siteCreated',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete,\n          data: data\n        }\n      };\n    },\n    siteCreated: function(site, callback) {\n      return {\n        type: ActionTypes.SITE_CREATED,\n        site: site\n      };\n    },\n    updateSite: function(path, value, onComplete) {\n      return {\n        type: ActionTypes.UPDATE_SITE,\n        meta: {\n          remote: true,\n          url: API_ROOT + 'update-site',\n          method: 'PATCH',\n          data: {path: path, value: value},\n          dispatch: 'siteUpdated',\n          // @@@:TODO: Remove this callback when migration to ReactJS is completed\n          onComplete: onComplete\n        },\n        path: path,\n        value: value\n      };\n    },\n    siteUpdated: function(resp, callback) {\n      return {\n        type: ActionTypes.SITE_UPDATED,\n        resp: resp\n      };\n    },\n    deleteSite: function() {\n      return {\n        type: ActionTypes.DELETE_SITE,\n        meta: {\n          remote: true\n          // url: '',\n          // dispatch: ''\n        }\n      };\n    },\n    orderSites: function(sites) {\n      return {\n        type: ActionTypes.ORDER_SITES,\n        meta: {\n          remote: true,\n          method: 'PUT',\n          url: API_ROOT + 'order-sites',\n          data: sites\n        },\n        sites: sites\n      };\n    }\n  });\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  function checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n\n  window.redux_middleware = function (store) {\n    return function (next) {\n      return function (action) {\n        if (action.meta && action.meta.remote) {\n          var method =  action.meta.method ? action.meta.method : 'GET';\n\n          fetch(\n            action.meta.url,\n            {\n              method: method,\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: method === 'get' ? undefined : JSON.stringify(action.meta.data)\n            }\n          )\n            .then(checkStatus)\n            .then(function(resp) {\n              return resp.json();\n            })\n            .then(function(json) {\n              if (action.meta.dispatch) {\n                store.dispatch(Actions[action.meta.dispatch](json));\n                if (action.meta.onComplete) {\n                  action.meta.onComplete(json);\n                }\n              }\n            })\n            .catch(function(error) {\n              console.log('request failed', error);\n            });\n        }\n\n        return next(action);\n      };\n    };\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  window.reducer = function(state, action) {\n    var path, value, site, sites = [];\n\n    console.log(action);\n\n    if (state === undefined) {\n      state = Immutable.Map();\n    }\n\n    switch (action.type) {\n      case ActionTypes.GET_STATE:\n        return state;\n\n      case ActionTypes.SET_STATE:\n        return Immutable.fromJS(action.state);\n\n      case ActionTypes.CREATE_SITE:\n        return state;\n\n      case ActionTypes.SITE_CREATED:\n        sites = state.getIn(['site']).toJSON();\n        sites.push(action.site);\n        return state.setIn(['site', sites]);\n\n      case ActionTypes.UPDATE_SITE:\n        path = action.path.split('/');\n        value = action.value;\n\n        return state.setIn(path, value);\n\n      case ActionTypes.DELETE_SITE:\n        return state;\n\n      case ActionTypes.SITE_UPDATED:\n        path = action.resp.path.split('/');\n        value = action.resp.value;\n\n        return state.setIn(path, value);\n\n      case ActionTypes.ORDER_SITES:\n        action.sites.forEach(function(site, new_idx) {\n          var site_name = site === '0' ? '' : site;\n\n          site = state.getIn(['site']).find(function(site, old_idx) {\n            var _site = site.toJSON();\n\n            return _site.name === site_name;\n          });\n\n          if (site) {\n            sites.push(site.toJSON());\n          }\n        });\n\n        if (sites.length > 0) {\n          return state.setIn(['site'], Immutable.List(sites));\n        } else {\n          return state;\n        }\n        break;\n\n      default:\n        return state;\n    }\n  };\n})(window, document);\n","(function(window, document) {\n  'use strict';\n\n  var createStoreWithMiddleware = Redux.applyMiddleware(redux_middleware)(Redux.createStore);\n\n  window.redux_store = createStoreWithMiddleware(reducer);\n  redux_store.dispatch(Actions.getState());\n})(window, document);\n"],"sourceRoot":"/source/"}